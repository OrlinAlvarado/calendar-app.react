{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages.es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventDeleted","eventClearActiveEvent","eventUpdated","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","ariaHideApp","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","basename","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5b36560.chunk.js","sourcesContent":["\r\nexport const types = {\r\n    \r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n    \r\n    \r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout',\r\n    \r\n    eventStartAddNew: '[event] Start Add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    \r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n    \r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null,\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n/*\r\n{\r\n    id: new Date().getTime(),\r\n    title: 'Cumpleaños',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    notes: 'Comprar pastel',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Orlin'\r\n    }\r\n}\r\n*/\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n    \r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    \r\n    \r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [ ...state.events, action.payload]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ?  action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( e => e.id !== state.activeEvent.id),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded: \r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        case types.eventLogout: \r\n            return {\r\n                ...initialState\r\n            };\r\n        \r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action ) => {\r\n    switch ( action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer =  combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducers\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET') => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    \r\n    if( method === 'GET'){\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET') => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if( method === 'GET'){\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment'\r\nexport const prepareEvents = ( events = []) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate()\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const { uid, name } = getState().auth;\r\n        \r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            \r\n            if ( body.ok ) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch( eventAddNew( event ));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE')\r\n            const body = await resp.json();\r\n            \r\n            if( body.ok ){\r\n                dispatch( eventDeleted( ));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }    \r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted,\r\n})\r\n\r\nexport const eventClearActiveEvent = (event) => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT')\r\n            const body = await resp.json();\r\n            \r\n            if( body.ok ){\r\n                dispatch( eventUpdated( event ));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n  type: types.eventUpdated,\r\n  payload: event\r\n    \r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            \r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            \r\n            const events = prepareEvents(body.eventos);\r\n            dispatch( eventLoaded( events ));\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})\r\n\r\n\r\n  \r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        \r\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken( 'auth/new', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchConToken( 'auth/renew');\r\n        const body = await resp.json();\r\n        \r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( logout());\r\n        dispatch( eventLogout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm( {\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n    const { lEmail, lPassword }  = formLoginValues;\r\n    \r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( {\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: '',\r\n    });\r\n    \r\n    const { rName ,rEmail ,rPassword1 ,rPassword2 } = formRegisterValues;\r\n    \r\n\r\n    \r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin(lEmail, lPassword ));\r\n    }\r\n    \r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n        \r\n        if( rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas debe de ser iguales', 'error');\r\n        }\r\n        dispatch( startRegister( rName, rEmail, rPassword1 ));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 } \r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 } \r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const { name } = useSelector(state => state.auth)\r\n    \r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mp-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n            \r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span>- { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react'\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment'\r\n\r\nimport Swal  from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n  \r\n  if( process.env.NODE_ENV !== 'test'){\r\n      Modal.setAppElement('#root')\r\n  }\r\n  \r\n  const now = moment().minutes(0).seconds(0).add(1, 'hours');\r\n  const nowPlus1 = now.clone().add(1, 'hours');\r\n  \r\n  const initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n  \r\nexport const CalendarModal = () => {\r\n    \r\n    const [ dateStart, setDateStart] = useState(now.toDate());\r\n    const [ dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [ titleValid, setTitleValid] = useState(true);\r\n    \r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n    \r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    \r\n    const { notes, title, start, end }  = formValues;\r\n    \r\n    useEffect(() => {\r\n        \r\n        if( activeEvent ){\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent )\r\n        }\r\n    }, [activeEvent,setFormValues])\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n    const closeModal = () => {\r\n        \r\n        dispatch( uiCloseModal() )\r\n        dispatch( eventClearActiveEvent() )\r\n        setFormValues( initEvent );\r\n    }\r\n    \r\n    const handleStartDateChange = ( e ) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    \r\n    const handleEndDateChange = ( e ) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n    \r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n        \r\n        if( momentStart.isSameOrAfter( momentEnd )){\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error')\r\n        }\r\n        \r\n        if( title.trim().length < 2){\r\n           return setTitleValid(false);\r\n        } \r\n        \r\n        if( activeEvent ){\r\n            dispatch(\r\n                eventStartUpdate( formValues )\r\n            )\r\n        } else {\r\n            dispatch( eventStartAddNew(formValues));\r\n        }\r\n        \r\n        setTitleValid(true);\r\n        closeModal();\r\n        \r\n    }\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ closeModal }\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n          ariaHideApp={ !process.env.NODE_ENV === 'test'}\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            \r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const handleClickNew = (e) => {\r\n        dispatch( uiOpenModal() )\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete());\r\n    }\r\n    return (\r\n        <button\r\n           className=\"btn btn-danger fab-danger\" \r\n           onClick={ handleDelete }\r\n        >\r\n            <i className='fas fa-trash'></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment';\r\n\r\nimport { NavBar } from '../ui/NavBar'\r\nimport { messages } from '../../helpers/calendar-messages.es'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n    \r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month');\r\n    \r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() )\r\n    }, [dispatch])\r\n    \r\n    \r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    \r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive( e ));\r\n    }\r\n    \r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n    \r\n    const onSelectSlot = (e) => {\r\n        console.log(e);\r\n        dispatch( eventClearActiveEvent());\r\n    }\r\n    \r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        \r\n        const style = {\r\n            backgroundColor: (uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n            \r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                />\r\n                \r\n            <AddNewFab />\r\n            \r\n            { (activeEvent) && <DeleteEventFab /> }\r\n                \r\n                    \r\n                        \r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect, HashRouter\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const { checking, uid } = useSelector(state => state.auth)\r\n    \r\n    useEffect(() => {\r\n        dispatch( startChecking() )\r\n    }, [dispatch])\r\n    \r\n    if( checking ){\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n    \r\n    return (\r\n        <HashRouter basename=\"/\">\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}